---

# Note: we don't use the GitHub API to retrieve the latest version because
# it has rate limits which are hard to avoid in CI (we need a token, authenticate
# with the API, etc.). Instead, we browse the latest release url which redirects
# to the release page, where we can find the version number in the URL.

- name: Get/parse release info
  become: false
  delegate_to: localhost
  run_once: true
  block:
    - name: Get latest release information from GitHub
      ansible.builtin.uri:
        url: "{{ mergerfs_github_releases_url }}/latest"
      register: mergerfs_github_release_page
      check_mode: false

    - name: Set latest mergerfs version fact
      ansible.builtin.set_fact:
        mergerfs_version: "{{ mergerfs_github_release_page['url'].split('/')[-1] }}"
      when: mergerfs_version == "latest"

    - name: Determine package download url
      ansible.builtin.set_fact:
        mergerfs_package_url: "{{ mergerfs_github_releases_url }}/download/{{ mergerfs_version }}/\
          {{ mergerfs_pkg_prefix }}{{ mergerfs_version }}{{ mergerfs_pkg_suffix }}"

- name: Install xz-utils package for .deb package installation
  ansible.builtin.apt:
    name: xz-utils
    state: present
    update_cache: true
  become: true
  when: ansible_pkg_mgr == 'apt'

- name: Install mergerfs package with apt
  ansible.builtin.apt:
    deb: "{{ mergerfs_package_url }}"
    state: present
  become: true
  when: ansible_pkg_mgr == 'apt'

- name: Install mergerfs package with yum
  ansible.builtin.yum:
    name: "{{ mergerfs_package_url }}"
    state: present
    disable_gpg_check: true  # the package is not signed
  become: true
  when: ansible_pkg_mgr == 'yum'

- name: Install mergerfs package with dnf
  ansible.builtin.dnf:
    name: "{{ mergerfs_package_url }}"
    state: present
    disable_gpg_check: true  # the package is not signed
  become: true
  when: ansible_pkg_mgr == 'dnf'
