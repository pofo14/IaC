### Debian (bookworm) preseed for Proxmox-on-Debian with mdadm RAID1 + LVM (BIOS boot)

### Locale & keyboard
d-i debian-installer/locale string en_US.UTF-8
d-i keyboard-configuration/xkb-keymap string us
d-i keyboard-configuration/toggle select No toggling

### Early: ensure tools exist in d-i, then wipe both disks by-id
d-i preseed/early_command string \
  anna-install parted-udeb gdisk-udeb util-linux-udeb ; \
  dd if=/dev/zero of=/dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V bs=512 count=2048 ; \
  dd if=/dev/zero of=/dev/disk/by-id/ata-Samsung_SSD_870_EVO_500GB_S6PXNZ0TC05818H bs=512 count=2048 ; \
  wipefs -a /dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V ; \
  wipefs -a /dev/disk/by-id/ata-Samsung_SSD_870_EVO_500GB_S6PXNZ0TC05818H ; \
  sgdisk --zap-all /dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V ; \
  sgdisk --zap-all /dev/disk/by-id/ata-Samsung_SSD_870_EVO_500GB_S6PXNZ0TC05818H

### Networking (installer + final system)
d-i netcfg/choose_interface select auto
d-i netcfg/disable_autoconfig boolean true
d-i netcfg/disable_dhcp boolean true
d-i netcfg/get_ipaddress string 192.168.2.20
d-i netcfg/get_netmask string 255.255.255.0
d-i netcfg/get_gateway string 192.168.2.1
d-i netcfg/get_nameservers string 192.168.2.2
d-i netcfg/confirm_static boolean true
d-i netcfg/get_hostname string pve1
d-i netcfg/get_domain string flopo.retropetro.net

### Mirror
d-i mirror/protocol select http
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string
d-i mirror/country string manual
d-i mirror/suite string bookworm

### Accounts
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password $6$e7pqDzubRiwcuXr/$UXzYpp7371rTigpT3N0bkI90T1sFmzt2FzxQUq9Gi.D0pZjgNdnze79FB9xjXs5mU9Qes0PiZ9VBRckOdw1tO1

d-i passwd/make-user boolean true
d-i passwd/user-fullname string Ken Petro
d-i passwd/username string pofo14
d-i passwd/user-password-crypted password $6$e7pqDzubRiwcuXr/$UXzYpp7371rTigpT3N0bkI90T1sFmzt2FzxQUq9Gi.D0pZjgNdnze79FB9xjXs5mU9Qes0PiZ9VBRckOdw1tO1

### Time
d-i clock-setup/utc boolean false
d-i time/zone select US/Eastern

### Disks (BIOS boot): RAID1 (/boot) + RAID1 PV for LVM
# Target both disks (by-id is robust)
d-i partman-auto/disk string \
  /dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V \
  /dev/disk/by-id/ata-Samsung_SSD_870_EVO_500GB_S6PXNZ0TC05818H

# RAID method with LVM on top
d-i partman-auto/method string raid
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# Expert recipe (per-disk: 1MiB bios_grub, md member for /boot, md member for LVM PV)
# Then LVs: root, swap, var, home
d-i partman-auto/expert_recipe string                         \
  boot-lvm-raid ::                                            \
      1 1 1 free                                              \
          $gptonly{ } $primary{ }                             \
          method{ keep }                                      \
          $bios_boot{ } biosgrub{ }                           \
      .                                                       \
      1000 1000 1000 raid                                     \
          $primary{ } method{ raid } $lvmignore{ }            \
          use_filesystem{ } filesystem{ ext4 }                \
      .                                                       \
      100000 100000 -1 raid                                   \
          method{ raid } $lvmignore{ }                        \
      .                                                       \
      8000 8000 8000 ext4                                     \
          $lvmok{ } lv_name{ root }                           \
          method{ format } format{ } filesystem{ ext4 }       \
          mountpoint{ / }                                     \
      .                                                       \
      4000 4000 4000 swap                                     \
          $lvmok{ } lv_name{ swap }                           \
          method{ swap } format{ }                            \
      .                                                       \
      50000 50000 50000 ext4                                  \
          $lvmok{ } lv_name{ var }                            \
          method{ format } format{ } filesystem{ ext4 }       \
          mountpoint{ /var }                                  \
      .                                                       \
      10000 10000 -1 ext4                                     \
          $lvmok{ } lv_name{ home }                           \
          method{ format } format{ } filesystem{ ext4 }       \
          mountpoint{ /home }                                 \
      .

# Build md arrays (NOTE: -partN suffixes)
d-i partman-auto-raid/recipe string \
    1 2 0 ext4 /boot \
      /dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V-part2#/dev/disk/by-id/ata-Samsung_SSD_870_EVO_500GB_S6PXNZ0TC05818H-part2 \
    . \
    1 2 0 lvm - \
      /dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V-part3#/dev/disk/by-id/ata-Samsung_SSD_870_EVO_500GB_S6PXNZ0TC05818H-part3 \
    .

# mdadm confirmations & degraded boot allowance
d-i mdadm/scan boolean true
d-i mdadm/boot_degraded boolean true
d-i partman-md/confirm boolean true
d-i partman-md/confirm_nooverwrite boolean true

# Write & confirm partitioning
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Use UUID mounts
d-i partman/mount_style select uuid

# VG/LV sizing
d-i partman-auto-lvm/new_vg_name string vg0
d-i partman-auto-lvm/guided_size string max

### Apt setup
d-i apt-setup/disable-cdrom-entries boolean true
d-i apt-setup/services-select multiselect security, updates

### Package selection
tasksel tasksel/first multiselect standard, ssh-server
d-i pkgsel/include string build-essential curl gnupg2 ifupdown2 lvm2

### GRUB (BIOS) to both disks
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev string \
  /dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V \
  /dev/disk/by-id/ata-Samsung_SSD_870_EVO_500GB_S6PXNZ0TC05818H
d-i grub-installer/allow_unauthenticated boolean true

### Late command: hostname, SSH keys, network (ifupdown2), sudo, services
d-i preseed/late_command string \
  echo pve1 > /target/etc/hostname ; \
  in-target mkdir -p /root/.ssh /home/pofo14/.ssh ; \
  in-target sh -c 'curl -s https://github.com/pofo14.keys > /root/.ssh/authorized_keys' ; \
  in-target install -m 600 /root/.ssh/authorized_keys /home/pofo14/.ssh/authorized_keys ; \
  in-target chmod 700 /root/.ssh /home/pofo14/.ssh ; \
  in-target chown -R pofo14:pofo14 /home/pofo14/.ssh ; \
  in-target sed -i "s/^#\\?PermitRootLogin.*/PermitRootLogin prohibit-password/" /etc/ssh/sshd_config ; \
  in-target sed -i "s/^#\\?PasswordAuthentication.*/PasswordAuthentication no/" /etc/ssh/sshd_config ; \
  in-target sh -c 'echo "pofo14 ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/pofo14' ; \
  in-target chmod 0440 /etc/sudoers.d/pofo14 ; \
  in-target apt-get install -y ifupdown2 lvm2 ; \
  in-target systemctl disable systemd-networkd || true ; \
  in-target systemctl disable NetworkManager || true ; \
  in-target mkdir -p /etc/network/interfaces.d ; \
  in-target sh -c 'printf "auto enp2s0f1\niface enp2s0f1 inet static\n    address 192.168.2.20/24\n    gateway 192.168.2.1\n    dns-nameservers 192.168.2.2\n" > /etc/network/interfaces.d/enp2s0f1' ; \
  in-target sh -c 'printf "source /etc/network/interfaces.d/*\n" > /etc/network/interfaces' ; \
  in-target ifup enp2s0f1 || true ; \
  in-target sh -c "echo pve1 > /etc/hostname" ; \
  in-target hostname pve1 ; \
  in-target sed -i 's/debian/pve1/g' /etc/hosts ; \
  in-target sh -c 'echo "127.0.1.1 pve1.flopo.retropetro.net pve1" >> /etc/hosts' ; \
  in-target sh -c 'echo "192.168.2.20 pve1.flopo.retropetro.net pve1" >> /etc/hosts' ; \
  in-target sh -c 'echo "::1     localhost ip6-localhost ip6-loopback" >> /etc/hosts' ; \
  in-target sh -c 'echo "ff02::1 ip6-allnodes" >> /etc/hosts' ; \
  in-target sh -c 'echo "ff02::2 ip6-allrouters" >> /etc/hosts' ; \
  in-target sh -c 'echo "[Unit]" > /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "Description=Fix hostname on first boot" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "After=network.target" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "ConditionPathExists=!/var/lib/hostname-fixed" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "[Service]" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "Type=oneshot" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "ExecStart=/bin/bash -c \\"hostnamectl set-hostname pve1 && touch /var/lib/hostname-fixed\\"" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "RemainAfterExit=yes" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "[Install]" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "WantedBy=multi-user.target" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target systemctl enable fix-hostname.service ; \
  in-target sh -c 'echo "# Network configuration validation" > /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "[Unit]" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "Description=Validate static IP configuration" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "After=network.target" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "[Service]" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "Type=oneshot" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "ExecStart=/bin/bash -c \\"ip addr show enp2s0f1 | grep -q 192.168.2.20 || (echo Static IP not set, applying configuration && ifdown enp2s0f1 && ifup enp2s0f1)\\"" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "RemainAfterExit=yes" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "[Install]" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "WantedBy=multi-user.target" >> /etc/systemd/system/validate-network.service' ; \
  in-target systemctl enable validate-network.service ; \
  in-target systemctl restart networking || true ; \
  in-target systemctl restart ssh || true

### Finish
d-i finish-install/reboot_in_progress note
