# TODO: Update the rebuild for Proxmox 9
# TODO: Update the preseed configuration to add the public key for the linux build machine

## locales
d-i debian-installer/locale string en_US.UTF-8
d-i keyboard-configuration/xkb-keymap string us
d-i keyboard-configuration/toggle select No toggling

# Early command to ensure hostname is set properly
d-i preseed/early_command string \
  dd if=/dev/zero of=/dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V bs=512 count=2048 ; \
#  dd if=/dev/zero of=/dev/disk/by-id/ata-Samsung_SSD_870_EVO_500GB_S6PXNZ0TC05818H bs=512 count=2048 ; \
  wipefs -a /dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V ; \
#  wipefs -a /dev/disk/by-id/ata-Samsung_SSD_870_EVO_500GB_S6PXNZ0TC05818H ; \
  sgdisk --zap-all /dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V ; \
#  sgdisk --zap-all /dev/disk/by-id/ata-Samsung_SSD_870_EVO_500GB_S6PXNZ0TC05818H ; \
  mkdir -p /target/etc/hostname.d ; \
  echo pve1 > /target/etc/hostname.d/hostname

# Network configuration section in preseed file
d-i netcfg/disable_autoconfig boolean true
d-i netcfg/disable_dhcp boolean true
d-i netcfg/get_ipaddress string 192.168.2.20
d-i netcfg/get_netmask string 255.255.255.0
d-i netcfg/get_gateway string 192.168.2.1
d-i netcfg/get_nameservers string 192.168.2.2
d-i netcfg/confirm_static boolean true
d-i netcfg/get_hostname string pve1
d-i netcfg/get_domain string flopo.retropetro.net

## mirror
d-i mirror/protocol select http
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string 
d-i mirror/country string manual

# Suite to install.
d-i mirror/suite string bookworm

## accounts
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password $6$e7pqDzubRiwcuXr/$UXzYpp7371rTigpT3N0bkI90T1sFmzt2FzxQUq9Gi.D0pZjgNdnze79FB9xjXs5mU9Qes0PiZ9VBRckOdw1tO1

# Skip creation of a normal user account.
d-i passwd/make-user boolean true
d-i passwd/user-fullname string Ken Petro
d-i passwd/username string pofo14
d-i passwd/user-password-crypted password $6$e7pqDzubRiwcuXr/$UXzYpp7371rTigpT3N0bkI90T1sFmzt2FzxQUq9Gi.D0pZjgNdnze79FB9xjXs5mU9Qes0PiZ9VBRckOdw1tO1

## Clock and timezone
d-i clock-setup/utc boolean false
d-i time/zone select US/Eastern

## Partitioning
d-i partman-auto/disk string /dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V
d-i grub-installer/bootdev string /dev/disk/by-id/ata-Samsung_SSD_860_EVO_500GB_S598NE0M803304V

# Disable LVM
d-i partman-auto/method select regular

# Use simple atomic recipe (creates / + swap, no separate /home or LVM)
d-i partman-auto/choose_recipe select atomic

# Remove pre-existing partitions, LVM, and RAID configs if present
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true

# Confirm partitioning without prompting
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman-md/confirm boolean true

# Use UUIDs for mounting (default behavior)
d-i partman/mount_style select uuid

## Apt setup
# If you don't want to have the sources.list entry for a DVD/ BD installation image active in the installed system
d-i apt-setup/disable-cdrom-entries boolean true

# Select which update services to use; define the mirrors to be used. Values shown below are the normal defaults.
d-i services_select string multiselect security, updates

## Package selection
tasksel tasksel/first multiselect standard, ssh-server

# Individual additional packages to install
d-i pkgsel/include string build-essential curl gnupg2 ifupdown2

## Boot loader
# This is fairly safe to set, it makes grub install automatically to the UEFI partition/boot record if no other operating system is detected on the machine.
d-i grub-installer/only_debian boolean true

## Advanced options
## Network configuration section (updated with static IP)

d-i preseed/late_command string \
  echo pve1 > /target/etc/hostname ; \
  in-target mkdir -p /root/.ssh /home/pofo14/.ssh ; \
  in-target sh -c 'curl -s https://github.com/pofo14.keys > /root/.ssh/authorized_keys' ; \
  in-target install -m 600 /root/.ssh/authorized_keys /home/pofo14/.ssh/authorized_keys ; \
  in-target chmod 700 /root/.ssh /home/pofo14/.ssh ; \
  in-target chown -R pofo14:pofo14 /home/pofo14/.ssh ; \
  in-target sed -i "s/^#\?PermitRootLogin.*/PermitRootLogin prohibit-password/" /etc/ssh/sshd_config ; \
  in-target sed -i "s/^#\?PasswordAuthentication.*/PasswordAuthentication no/" /etc/ssh/sshd_config ; \
  in-target sh -c 'echo "pofo14 ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/pofo14' ; \
  in-target chmod 0440 /etc/sudoers.d/pofo14 ; \
  in-target apt-get install -y ifupdown2 ; \
  in-target systemctl disable systemd-networkd || true ; \
  in-target systemctl disable NetworkManager || true ; \
  in-target mkdir -p /etc/network/interfaces.d ; \
  in-target sh -c 'printf "auto enp2s0f1\niface enp2s0f1 inet static\n    address 192.168.2.20/24\n    gateway 192.168.2.1\n    dns-nameservers 192.168.2.2\n" > /etc/network/interfaces.d/enp2s0f1' ; \
  in-target sh -c 'printf "source /etc/network/interfaces.d/*\n" > /etc/network/interfaces' ; \
  in-target ifup enp2s0f1 || true ; \
  in-target sh -c 'echo pve1 > /etc/hostname' ; \
  in-target hostname pve1 ; \
  in-target sed -i 's/debian/pve1/g' /etc/hosts ; \
  in-target sh -c 'echo "127.0.1.1 pve1.flopo.retropetro.net pve1" >> /etc/hosts' ; \
  in-target sh -c 'echo "192.168.2.20 pve1.flopo.retropetro.net pve1" >> /etc/hosts' ; \
  in-target sh -c 'echo "::1     localhost ip6-localhost ip6-loopback" >> /etc/hosts' ; \
  in-target sh -c 'echo "ff02::1 ip6-allnodes" >> /etc/hosts' ; \
  in-target sh -c 'echo "ff02::2 ip6-allrouters" >> /etc/hosts' ; \
  in-target sh -c 'echo "[Unit]" > /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "Description=Fix hostname on first boot" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "After=network.target" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "ConditionPathExists=!/var/lib/hostname-fixed" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "[Service]" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "Type=oneshot" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "ExecStart=/bin/bash -c \"hostnamectl set-hostname pve1 && touch /var/lib/hostname-fixed\"" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "RemainAfterExit=yes" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "[Install]" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "WantedBy=multi-user.target" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target systemctl enable fix-hostname.service ; \
  in-target sh -c 'echo "# Network configuration validation" > /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "[Unit]" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "Description=Validate static IP configuration" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "After=network.target" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "[Service]" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "Type=oneshot" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "ExecStart=/bin/bash -c \"ip addr show enp2s0f1 | grep -q 192.168.2.20 || (echo Static IP not set, applying configuration && ifdown enp2s0f1 && ifup enp2s0f1)\"" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "RemainAfterExit=yes" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "[Install]" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "WantedBy=multi-user.target" >> /etc/systemd/system/validate-network.service' ; \
  in-target systemctl enable validate-network.service ; \
  in-target systemctl restart networking || true ; \
  in-target systemctl restart ssh || true

d-i finish-install/reboot_in_progress note