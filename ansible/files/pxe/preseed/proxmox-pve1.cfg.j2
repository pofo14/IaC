# Proxmox Preseed Configuration for {{ inventory_hostname }}
# Generated from template

## locales
d-i debian-installer/locale string {{ preseed_locale | default('en_US.UTF-8') }}
d-i keyboard-configuration/xkb-keymap string {{ preseed_keyboard | default('us') }}
d-i keyboard-configuration/toggle select No toggling

# Early command to prepare both disks
d-i preseed/early_command string \
{% for disk in preseed_disks %}
  dd if=/dev/zero of={{ disk.path }} bs=512 count=2048 ; \
  wipefs -a {{ disk.path }} ; \
  sgdisk --zap-all {{ disk.path }} ; \
{% endfor %}
  mkdir -p /target/etc/hostname.d ; \
  echo {{ preseed_hostname }} > /target/etc/hostname.d/hostname

# Network configuration section in preseed file
d-i netcfg/disable_autoconfig boolean true
d-i netcfg/disable_dhcp boolean true
d-i netcfg/get_ipaddress string {{ preseed_ip_address }}
d-i netcfg/get_netmask string {{ preseed_netmask }}
d-i netcfg/get_gateway string {{ preseed_gateway }}
d-i netcfg/get_nameservers string {{ preseed_dns_servers }}
d-i netcfg/confirm_static boolean true
d-i netcfg/get_hostname string {{ preseed_hostname }}
d-i netcfg/get_domain string {{ preseed_domain }}

## mirror
d-i mirror/protocol select {{ preseed_mirror_protocol | default('http') }}
d-i mirror/http/hostname string {{ preseed_mirror_hostname | default('deb.debian.org') }}
d-i mirror/http/directory string {{ preseed_mirror_directory | default('/debian') }}
d-i mirror/http/proxy string {{ preseed_mirror_proxy | default('') }}
d-i mirror/country string manual

# Suite to install.
d-i mirror/suite string {{ preseed_suite | default('bookworm') }}

## accounts
d-i passwd/root-login boolean true
d-i passwd/root-password-crypted password {{ preseed_root_password_hash }}

# Skip creation of a normal user account.
d-i passwd/make-user boolean true
d-i passwd/user-fullname string {{ preseed_user_fullname }}
d-i passwd/username string {{ preseed_username }}
d-i passwd/user-password-crypted password {{ preseed_user_password_hash }}

## Clock and timezone
d-i clock-setup/utc boolean {{ preseed_utc | default('false') }}
d-i time/zone select {{ preseed_timezone | default('US/Eastern') }}

## Partitioning with LVM RAID1
# Specify both disks for LVM
d-i partman-auto/disk string {{ preseed_disks | map(attribute='path') | join(' ') }}

# Use LVM with RAID
d-i partman-auto/method string raid
d-i partman-lvm/device_remove_lvm boolean true
d-i partman-md/device_remove_md boolean true
d-i partman-lvm/confirm boolean true
d-i partman-lvm/confirm_nooverwrite boolean true

# Custom partitioning recipe for RAID1 with LVM
d-i partman-auto/expert_recipe string                         \
      boot-lvm-raid ::                                        \
              1000 1000 1000 raid                             \
                      $primary{ } method{ raid }              \
                      $lvmignore{ }                           \
              .                                               \
              100000 100000 1000000000 raid                   \
                      method{ raid }                          \
                      $lvmignore{ }                           \
              .                                               \
              8000 8000 8000 ext4                             \
                      $defaultignore{ }                       \
                      $lvmok{ }                               \
                      lv_name{ root }                         \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ / }                         \
              .                                               \
              4000 4000 4000 swap                             \
                      $defaultignore{ }                       \
                      $lvmok{ }                               \
                      lv_name{ swap }                         \
                      method{ swap } format{ }                \
              .                                               \
              50000 50000 50000 ext4                          \
                      $defaultignore{ }                       \
                      $lvmok{ }                               \
                      lv_name{ var }                          \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ /var }                      \
              .                                               \
              10000 10000 -1 ext4                             \
                      $defaultignore{ }                       \
                      $lvmok{ }                               \
                      lv_name{ home }                         \
                      method{ format } format{ }              \
                      use_filesystem{ } filesystem{ ext4 }    \
                      mountpoint{ /home }                     \
              .

# RAID configuration - RAID1 across both disks
d-i partman-auto-raid/recipe string \
    1 2 0 ext4 /boot                \
          {{ preseed_disks[0].path }}1#{{ preseed_disks[1].path }}1 \
    .                               \
    1 2 0 lvm -                     \
          {{ preseed_disks[0].path }}2#{{ preseed_disks[1].path }}2 \
    .

# Confirm RAID setup
d-i partman-md/confirm boolean true
d-i partman-md/confirm_nooverwrite boolean true

# Confirm partitioning without prompting
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true

# Use UUIDs for mounting (default behavior)
d-i partman/mount_style select uuid

# Volume group name
d-i partman-auto-lvm/new_vg_name string vg0

# Use all available space in VG
d-i partman-auto-lvm/guided_size string max

## Apt setup
# If you don't want to have the sources.list entry for a DVD/ BD installation image active in the installed system
d-i apt-setup/disable-cdrom-entries boolean true

# Select which update services to use; define the mirrors to be used. Values shown below are the normal defaults.
d-i services_select string multiselect security, updates

## Package selection
tasksel tasksel/first multiselect standard, ssh-server

# Individual additional packages to install
d-i pkgsel/include string build-essential curl gnupg2 ifupdown2 lvm2

## Boot loader - install to both disks for redundancy
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev string {{ preseed_disks | map(attribute='path') | join(' ') }}

## Advanced options
d-i preseed/late_command string \
  echo {{ preseed_hostname }} > /target/etc/hostname ; \
  in-target mkdir -p /root/.ssh /home/{{ preseed_username }}/.ssh ; \
  in-target sh -c 'curl -s {{ preseed_ssh_keys_url }} > /root/.ssh/authorized_keys' ; \
  in-target install -m 600 /root/.ssh/authorized_keys /home/{{ preseed_username }}/.ssh/authorized_keys ; \
  in-target chmod 700 /root/.ssh /home/{{ preseed_username }}/.ssh ; \
  in-target chown -R {{ preseed_username }}:{{ preseed_username }} /home/{{ preseed_username }}/.ssh ; \
  in-target sed -i "s/^#\?PermitRootLogin.*/PermitRootLogin prohibit-password/" /etc/ssh/sshd_config ; \
  in-target sed -i "s/^#\?PasswordAuthentication.*/PasswordAuthentication no/" /etc/ssh/sshd_config ; \
  in-target sh -c 'echo "{{ preseed_username }} ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/{{ preseed_username }}' ; \
  in-target chmod 0440 /etc/sudoers.d/{{ preseed_username }} ; \
  in-target apt-get install -y ifupdown2 lvm2 ; \
  in-target systemctl disable systemd-networkd || true ; \
  in-target systemctl disable NetworkManager || true ; \
  in-target mkdir -p /etc/network/interfaces.d ; \
  in-target sh -c 'printf "auto {{ preseed_network_interface }}\niface {{ preseed_network_interface }} inet static\n    address {{ preseed_ip_address }}/{{ preseed_cidr_prefix }}\n    gateway {{ preseed_gateway }}\n    dns-nameservers {{ preseed_dns_servers }}\n" > /etc/network/interfaces.d/{{ preseed_network_interface }}' ; \
  in-target sh -c 'printf "source /etc/network/interfaces.d/*\n" > /etc/network/interfaces' ; \
  in-target ifup {{ preseed_network_interface }} || true ; \
  in-target sh -c 'echo {{ preseed_hostname }} > /etc/hostname' ; \
  in-target hostname {{ preseed_hostname }} ; \
  in-target sed -i 's/debian/{{ preseed_hostname }}/g' /etc/hosts ; \
  in-target sh -c 'echo "127.0.1.1 {{ preseed_hostname }}.{{ preseed_domain }} {{ preseed_hostname }}" >> /etc/hosts' ; \
  in-target sh -c 'echo "{{ preseed_ip_address }} {{ preseed_hostname }}.{{ preseed_domain }} {{ preseed_hostname }}" >> /etc/hosts' ; \
  in-target sh -c 'echo "::1     localhost ip6-localhost ip6-loopback" >> /etc/hosts' ; \
  in-target sh -c 'echo "ff02::1 ip6-allnodes" >> /etc/hosts' ; \
  in-target sh -c 'echo "ff02::2 ip6-allrouters" >> /etc/hosts' ; \
  in-target sh -c 'echo "[Unit]" > /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "Description=Fix hostname on first boot" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "After=network.target" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "ConditionPathExists=!/var/lib/hostname-fixed" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "[Service]" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "Type=oneshot" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "ExecStart=/bin/bash -c \"hostnamectl set-hostname {{ preseed_hostname }} && touch /var/lib/hostname-fixed\"" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "RemainAfterExit=yes" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "[Install]" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target sh -c 'echo "WantedBy=multi-user.target" >> /etc/systemd/system/fix-hostname.service' ; \
  in-target systemctl enable fix-hostname.service ; \
  in-target sh -c 'echo "# Network configuration validation" > /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "[Unit]" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "Description=Validate static IP configuration" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "After=network.target" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "[Service]" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "Type=oneshot" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "ExecStart=/bin/bash -c \"ip addr show {{ preseed_network_interface }} | grep -q {{ preseed_ip_address }} || (echo Static IP not set, applying configuration && ifdown {{ preseed_network_interface }} && ifup {{ preseed_network_interface }})\"" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "RemainAfterExit=yes" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "[Install]" >> /etc/systemd/system/validate-network.service' ; \
  in-target sh -c 'echo "WantedBy=multi-user.target" >> /etc/systemd/system/validate-network.service' ; \
  in-target systemctl enable validate-network.service ; \
  in-target systemctl restart networking || true ; \
  in-target systemctl restart ssh || true

d-i finish-install/reboot_in_progress note