---
- name: Set node_exporter variables
  ansible.builtin.set_fact:
    node_exporter_port: 9100
    node_exporters_file: "{{ inventory_dir }}/group_vars/all/node_exporters.yml"

- name: Install node_exporter
  ansible.builtin.include_role:
    name: prometheus.prometheus.node_exporter
  vars:
    node_exporter_version: "1.3.1"
    node_exporter_web_listen_address: "0.0.0.0:9100"

- name: Ensure node_exporter is started and enabled
  ansible.builtin.systemd:
    name: node_exporter
    state: started
    enabled: true

- name: Check if node_exporter is accessible
  ansible.builtin.uri:
    url: "http://localhost:9100/metrics"
    method: GET
  register: node_exporter_check
  failed_when: false
  changed_when: false

- name: Display node_exporter status
  ansible.builtin.debug:
    msg: "node_exporter is {{ 'accessible' if node_exporter_check.status == 200 else 'not accessible' }}"

#- name: Collect node_exporter host information
#  ansible.builtin.set_fact:
#    node_exporter_info: "{{ node_exporter_info | default([]) + [{'ip': ansible_default_ipv4.address, 'port': 9100}] }}"

- name: Get current node_exporters list
  ansible.builtin.set_fact:
    current_node_exporters: "{{ lookup('file', node_exporters_file) | from_yaml }}"
  run_once: true # noqa: run-once[task]
  delegate_to: localhost

- name: Update node_exporters list
  ansible.builtin.set_fact:
    updated_node_exporters: "{{ current_node_exporters | default({'node_exporters': []}) | combine({'node_exporters': current_node_exporters.node_exporters + [{'ip': inventory_hostname, 'port': node_exporter_port}]}, recursive=true) }}"
  run_once: true # noqa: run-once[task]
  delegate_to: localhost

- name: Write updated node_exporters list
  ansible.builtin.copy:
    content: "{{ updated_node_exporters | to_nice_yaml }}"
    dest: "{{ node_exporters_file }}"
  run_once: true # noqa: run-once[task]
  delegate_to: localhost
