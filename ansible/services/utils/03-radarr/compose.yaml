services:
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    labels:
      # enable traefik
      - "traefik.enable=true"

      # Regular HTTP Router (with redirect)
      # - "traefik.http.routers.radarr-http.rule=Host(`radarr.flopo.retropetro.net`)"
      # - "traefik.http.routers.radarr-http.entrypoints=web"
      # - "traefik.http.routers.radarr-http.middlewares=redirect-to-https@docker"
      # - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # HTTPS Router
      - "traefik.http.routers.radarr.rule=Host(`radarr.flopo.retropetro.net`)"
      - "traefik.http.routers.radarr.entrypoints=websecure"
      - "traefik.http.routers.radarr.tls=true"
      - "traefik.http.routers.radarr.tls.certresolver=stepca"
      
      - "traefik.http.routers.radarr.service=radarr"

      # # Test router for ACME
      # - "traefik.http.routers.radarr-test.rule=Host(`radarr.flopo.retropetro.net`) && PathPrefix(`/.well-known/acme-challenge/`)"
      # - "traefik.http.routers.radarr-test.entrypoints=web"
      # - "traefik.http.routers.radarr-test.service=radarr"
      # - "traefik.http.routers.radarr-test.priority=999"
      # - "traefik.http.routers.radarr-test.middlewares=test-headers"
      # - "traefik.http.middlewares.test-headers.headers.customresponseheaders.X-Test=working"

      # service config
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"

    networks:
      proxy:
        aliases:
          - radarr

    volumes:
      - "{{ appdata_path }}/arrs/radarr:{{ container_config_path }}"
      - "{{ storage_path }}:{{ container_data_path }}"
    environment:
      - PUID={{ arrs_uid }}
      - PGID={{ arrs_gid }}
      - TZ=America/New_York
    restart: unless-stopped 

# TODO: bring in any config files, if possible into a files dir and copy them to the container to bootstrap settings