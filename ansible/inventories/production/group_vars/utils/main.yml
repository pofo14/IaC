# geerlingguy.docker
docker_edition: 'ce'
docker_packages_state: present
docker_service_manage: true
docker_service_state: started
docker_service_enabled: true
docker_restart_handler_state: restarted

docker_install_compose_plugin: true
docker_compose_package: docker-compose-plugin
docker_compose_package_state: present

docker_add_repo: true
docker_repo_url: https://download.docker.com/linux

docker_users_manage: true
docker_users:
  - pofo14

## Ironic Badgetools Docker Compose Generator
docker_compose_generator_output_path: /opt/appdata
docker_compose_hostname: utils
appdata_path: /opt/appdata
container_config_path: /config
container_data_path: /data
storage_path: /mnt/data
arrs_uid: 3001
arrs_gid: 3000

## NFS Client Mount
nfs_client_mounts:
  - src: truenas.flopo.retropetro.net:/mnt/testpool/media
    path: /mnt/data
    fstype: nfs

## Groups Definition
create_groups:
  - name: dockermedia
    gid: "{{ arrs_gid }}"
    system: false

create_users:
  - username: mediadl
    uid: "{{ arrs_uid }}"
    user_state: present
    password: "{{ mediadl_password }}"
    update_password: always
    create_home: false
    group: dockermedia
    append: false
    comment: User for media downloads
  - username: pofo14
    user_state: present
    password: "!"
    update_password: on_create
    append: true
    groups: dockermedia

mnt_path: /mnt
create_directories:
  - path: "{{ mnt_path }}/data"
    group: dockermedia
    owner: mediadl
    mode: '0775'

# tailscale role:
# TODO: move secrets into ansible vault
tailscale_authkey: "{{ tailscale_authkey_vault }}"
tailscale_tags: ['container']
tailscale_oauth_ephemeral: false
tailscale_oauth_preauthorized: true
tailscale_args: --accept-dns=false
